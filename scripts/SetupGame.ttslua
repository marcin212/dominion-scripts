

function checkSupplyDecks()
    result = {}
    for i, guid in pairs(const.game.supplies) do
        deck_board = getObjectFromGUID(guid)
        if deck_board == nil then
            return false, result, "Missing GUID:" .. guid
        end
        objectsOnTop = getObjectsOnTop(deck_board.getPosition())
        if(#objectsOnTop ~= 1)then return false, result, "Missing or wrong card on deck board:" .. i end
        card = objectsOnTop[1].hit_object
        if(not isCard(card)) then return false, result, "Missing or wrong card on deck:" .. i end
        result[#result + 1] = card
    end
    return true, result
end


--needs parameters:
-- card
-- color
function DealStartCardWorker(data)
    data.card.clone({position = {0, 10, 0}, callback_function = function(obj) obj.deal(1, data.color) end})
end


function dealStartCards(card, amount)
    for color, _ in pairs(const.player) do
        if(Player[color].seated)then
            print("deal to " .. color)
            for i = 1, amount do
                local data = {card = card, color = color}
                TaskManager.addTask(data, "DealStartCardWorker")
            end
        end
    end
end

function setupStartPlayerCards()
    copperCard = getObjectFromGUID(const.game.stacks.treasure.copper)
    victoryCard = getObjectFromGUID(const.game.stacks.victory.estate)
    if(not isCard(copperCard) or not isCard(victoryCard)) then
        print("copper or estate card not found")
        return
    end
    dealStartCards(copperCard, 7)
    dealStartCards(victoryCard, 3)
end


function DuplicateCardWorker(data)
    spawnObjectJSON({json = data.json, position = data.position})
end

function spawnCard(guid, amount)
    local card = getObjectFromGUID(guid)
    local cardJSON = card.getJSON()
    local cardPos = card.getPosition()
    cardPos = {cardPos.x, cardPos.y, cardPos.z}
    for i = 1, amount do
        cardPos[2] = cardPos[2] + 0.3
        local newPos = {cardPos[1], cardPos[2], cardPos[3]}
        local data = {position = newPos, json = cardJSON}
        TaskManager.addTask(data, "DuplicateCardWorker")
    end
end

function setupStartCards()
    players = getPlayersCount()
    if(players <= 0 or players > #const.game.cardsCount) then
        print("Wrong number of players: " .. players)
        return
    end
    cardCount = const.game.cardsCount[players]
    cardGuid = const.game.stacks
    spawnCard(cardGuid.curse, cardCount.curse - 1)
    for k, v in pairs(cardCount.victory) do
        spawnCard(cardGuid.victory[k], v - 1)
    end
    for k, v in pairs(cardCount.treasure) do
        spawnCard(cardGuid.treasure[k], v - 1)
    end
end

function setupSupplyCards(amount)
    for _, card in pairs(cards) do
        spawnCard(card.getGUID(), amount - 1)
    end
end

function SetupGame()
    players = getPlayersCount()
    if(players <= 0 or players > #const.game.cardsCount) then
        print("Wrong number of players: " .. players)
        return
    end
    cardCount = const.game.cardsCount[players]
    isValid, cards, error = checkSupplyDecks()
    if(isValid)then
        setupStartPlayerCards()
        setupStartCards()
        setupSupplyCards(cardCount.supply)
        return true
    else
        print("SupplyDecksError: " .. error)
        return false
    end
end
