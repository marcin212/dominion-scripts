function getObjectsOnTop(objectPos)
    return Physics.cast({
        origin = objectPos,
        direction = {0, 1, 0},
        size = {x = 0.1, y = 0.1, z = 0.1},
        max_distance = 0.1,
        type = 1, --Ray cast
        debug = true
    })
end

function getDeckObject(color)
  local obj = getObjectsOnTop(getDeckPosition(color))[1]
  if(obj ~= nil) then
    return obj.hit_object
  end
  return nil
end

function getDiscardObject(color)
  local obj = getObjectsOnTop(getDiscardPosition(color))[1]
  if(obj ~= nil) then
    return obj.hit_object
  end
  return nil
end

function getDeckPosition(color)
    return getObjectFromGUID(const.player[color].deck).getPosition()
end

function getDiscardPosition(color)
    return getObjectFromGUID(const.player[color].discard).getPosition()
end

function isCard(object)
    return object ~= nil and object.tag == "Card"
end

function isDeck(object)
    return object ~= nil and object.tag == "Deck"
end

function stackOnTop(object, times)
    pos = object.getPosition()
    for i = 1, times do
        object.clone({position = pos})
    end
end

function getPlayersCount()
    return #getSeatedPlayers()
end

function getSeatedPlayers()
    local players = {}
    for color, v in pairs(const.player) do
        if(Player[color].seated)then
            players[#players+1] = Player[color];
        end
    end
    return players
end
